# version: '3.8'
services:
  db:
    image: postgres:14
    environment:
      POSTGRES_USER: demo
      POSTGRES_PASSWORD: demo
      POSTGRES_DB: telemetry
    volumes:
      - db-data:/var/lib/postgresql/data
    ports: ['5432:5432']
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U demo"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    env_file: .env
    environment:
      - DATABASE_URL=postgresql://demo:demo@db:5432/telemetry
    depends_on: ['db']
    ports: ['4000:4000']
    healthcheck:
      test: ["CMD-SHELL", "node -e \"require('http').get('http://localhost:4000', res=>process.exit(0)).on('error', ()=>process.exit(1))\"" ]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    ports: ['80:80']
    depends_on: ['backend']
    healthcheck:
      test: ["CMD-SHELL", "node -e \"require('http').get('http://localhost:5173', res=>process.exit(0)).on('error', ()=>process.exit(1))\"" ]
      interval: 10s
      timeout: 5s
      retries: 5

  simulator:
    build: ./simulator
    env_file: .env
    depends_on: ['backend']
    healthcheck:
      test: ["CMD-SHELL", "node -e \"process.exit(require('net').createConnection({port:4000, host:'backend'}).on('connect', ()=>process.exit(0)).on('error', ()=>process.exit(1)))\"" ]
volumes:
  db-data: